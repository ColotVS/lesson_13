public class lesson_13_24 {
    //Все классы унаследованы от Object

    //Все классы в Java неявно (скрытно) унаследованы от класса Object.
    //Переменной типа Object можно присвоить объект любого класса. Пример:
    //Код	                                Примечание
    //Object o = new Scanner(System.in);    В переменную o сохранена ссылка на объект типа Scanner
    //Object o = new String();              В переменную o сохранена ссылка на объект типа String
    //Object o = new Integer(15);           В переменную o сохранена ссылка на объект типа Integer
    //Object o = "Привет";                  В переменную o сохранена ссылка на объект типа String

    //На этом хорошие новости заканчиваются.
    //Компилятор не следит за тем, объект какого именно типа был сохранен в переменную типа Object, поэтому вызвать методы,
    //которые были у сохраненного объекта, но которых нет у переменной типа Object нельзя.
    //Если нужно вызвать методы такого объекта, то сначала ссылку на него нужно сохранить в переменную правильного типа,
    //а только потом вызвать методы у этой переменной:

    //Object o = new Scanner(System.in);
    //Scanner console = (Scanner) o;
    //int x = console.nextInt();

    //Тут мы сохраняем ссылку на объект типа Scanner в переменную типа Scanner с помощью оператора приведения типа.

    //Просто так переменную типа Object нельзя присвоить переменной типа Scanner,
    //даже если переменная типа Object хранит ссылку на объект типа Scanner.
    //Зато это можно сделать, если использовать уже известный вам оператор приведения типа. В общем виде выглядит это так:

    //Тип имя1 = (Тип) имя2;
    //Где имя1 – это имя переменной типа Тип, а имя2 – это имя переменной типа Object, которая хранит ссылку на объект типа Тип.
}
